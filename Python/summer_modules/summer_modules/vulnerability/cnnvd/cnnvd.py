# 根据 CVE-ID 从 CNNVD 获取漏洞信息
## TODO: CNNVD 的接口过于脆弱，或者反扒策略太激进，请求几次之后就一直 timeout 了，暂时搁置
### PS：单纯响应超级慢，超时时间需要设置长一些

import httpx
from bs4 import BeautifulSoup
from summer_modules.logger import init_and_get_logger
from summer_modules.web_request_utils import getUserAgent
import json
from config import CVE_INFO_BASE_DIR, write_dict_to_json_file
from pathlib import Path

CURRENT_DIR = Path(__file__).resolve().parent
logger = init_and_get_logger(CURRENT_DIR, "cnnvd_logger")

def get_cnnvd_info(cve_id: str, enable_local_search=True) -> dict:
    """根据 CVE-ID 从 CNNVD 获取漏洞信息
    Args:
        cve_id (str): CVE-ID
        enable_local_search (bool, optional): 是否启用本地搜索. Defaults to True.
    Returns:
        dict: 漏洞信息
    """
    if enable_local_search:
        cve_info_cnnvd_dir = CVE_INFO_BASE_DIR / cve_id
        cve_info_cnnvd_filepath = cve_info_cnnvd_dir / f"{cve_id}_cnnvd.json"
        if cve_info_cnnvd_filepath.exists():
            logger.debug(f"本地已存在漏洞信息: {cve_id}，从本地读取")
            with open(cve_info_cnnvd_filepath, "r") as f:
                return json.load(f)
    UA = getUserAgent()
    # UA = "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36 Edg/131.0.0.0"
    headers = {
        "user-agent": UA,
        "accept": "application/json, text/plain, */*",
        "accept-encoding": "gzip, deflate, br, zstd",
        "accept-language": "zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6",
        "connection": "keep-alive",
        "content-type": "application/json;charset=UTF-8",
        "dnt": "1",
        "host": "www.cnnvd.org.cn",
    }
    try:
        with httpx.Client(verify=False, timeout=20) as client:
            return _get_vul_info_from_cnnvd(cve_id, client, headers)
    except Exception as e:
        logger.error(f"获取漏洞信息失败: {e}, cve_id: {cve_id}")
        return None


def _get_vul_info_from_cnnvd(cve_id, client, headers):
    post_body = {
        "pageIndex": 1,
        "pageSize": 10,
        "keyword": cve_id,
    }
    post_body_json = json.dumps(post_body)
    resp = client.post(
        "https://www.cnnvd.org.cn/web/homePage/cnnvdVulList",
        headers=headers,
        data=post_body_json,
        follow_redirects=True,
    )
    # 返回的是个 json
    response_data_json = resp.json()
    if response_data_json["code"] != 200:
        logger.error(f"获取漏洞信息失败: {response_data_json}")
        return None
    data = response_data_json["data"]
    data_records = data["records"]
    if len(data_records) == 0:
        logger.error(f"未找到相关漏洞信息, cve_id: {cve_id}")
        return None
    # 遍历查询 cveCode 是否匹配
    vulName = None
    for record in data_records:
        cveCode = record["cveCode"]
        if cveCode == cve_id:
            cnnvdID = record["id"]
            vulName = record["vulName"]
            cnnvdCode = record["cnnvdCode"]
    if not vulName:
        logger.error(f"未找到相关漏洞信息, cve_id: {cve_id}")
        return None

    # 根据 cnnvdCode 获取漏洞详情
    getVulDetaiUrl = "https://www.cnnvd.org.cn/web/cnnvdVul/getCnnnvdDetailOnDatasource"
    data = {
        "cnnvdCode": cnnvdCode,
        "id": cnnvdID,
        "vulType": "0",
    }
    data_json = json.dumps(data)
    resp = client.post(
        getVulDetaiUrl,
        headers=headers,
        data=data_json,
        follow_redirects=True,
    )
    response_data_json = resp.json()
    if response_data_json["code"] != 200:
        logger.error(f"获取漏洞信息失败: {response_data_json}")
        return None
    data = response_data_json["data"]

    # 全都匹配的话存本地一份，省的重复请求 cnnvd
    cve_info_cnnvd_dir = CVE_INFO_BASE_DIR / cve_id
    cve_info_cnnvd_dir.mkdir(parents=True, exist_ok=True)
    cve_info_cnnvd_filepath = cve_info_cnnvd_dir / f"{cve_id}_cnnvd.json"
    cve_info_cnnvd_json = {
        "cveID": cve_id,
        "cnnvdID": cnnvdID,
        "vulName": vulName,
        "cnnvdCode": cnnvdCode,
        "data": data,
    }
    write_dict_to_json_file(data=cve_info_cnnvd_json, filepath=cve_info_cnnvd_filepath)
    return cve_info_cnnvd_json

def get_cve_info_from_cnnvd_test():
    cve_id = "CVE-2021-44228"
    cve_info = get_cnnvd_info(cve_id)
    print(f"cve_info: {cve_info}")